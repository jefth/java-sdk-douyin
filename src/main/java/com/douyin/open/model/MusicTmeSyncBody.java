/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.douyin.open.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * MusicTmeSyncBody
 */

public class MusicTmeSyncBody {
  @SerializedName("songids")
  private List<String> songids = new ArrayList<String>();

  /**
   * 操作类型:     * &#x60;1&#x60; - insert     * &#x60;2&#x60; - update     * &#x60;3&#x60; - delete 
   */
  @JsonAdapter(CmdEnum.Adapter.class)
  public enum CmdEnum {
    NUMBER_1(1),
    NUMBER_2(2),
    NUMBER_3(3);

    private Integer value;

    CmdEnum(Integer value) {
      this.value = value;
    }
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static CmdEnum fromValue(String text) {
      for (CmdEnum b : CmdEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<CmdEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CmdEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CmdEnum read(final JsonReader jsonReader) throws IOException {
        Integer value = jsonReader.nextInt();
        return CmdEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("cmd")
  private CmdEnum cmd = null;

  public MusicTmeSyncBody songids(List<String> songids) {
    this.songids = songids;
    return this;
  }

  public MusicTmeSyncBody addSongidsItem(String songidsItem) {
    this.songids.add(songidsItem);
    return this;
  }

   /**
   * 歌曲id列表
   * @return songids
  **/
  public List<String> getSongids() {
    return songids;
  }

  public void setSongids(List<String> songids) {
    this.songids = songids;
  }

  public MusicTmeSyncBody cmd(CmdEnum cmd) {
    this.cmd = cmd;
    return this;
  }

   /**
   * 操作类型:     * &#x60;1&#x60; - insert     * &#x60;2&#x60; - update     * &#x60;3&#x60; - delete 
   * @return cmd
  **/
  public CmdEnum getCmd() {
    return cmd;
  }

  public void setCmd(CmdEnum cmd) {
    this.cmd = cmd;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MusicTmeSyncBody musicTmeSyncBody = (MusicTmeSyncBody) o;
    return Objects.equals(this.songids, musicTmeSyncBody.songids) &&
        Objects.equals(this.cmd, musicTmeSyncBody.cmd);
  }

  @Override
  public int hashCode() {
    return Objects.hash(songids, cmd);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MusicTmeSyncBody {\n");
    
    sb.append("    songids: ").append(toIndentedString(songids)).append("\n");
    sb.append("    cmd: ").append(toIndentedString(cmd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
