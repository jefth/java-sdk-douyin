/*
 * 企业号信息查询
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.douyin.open.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * TransformModule
 */

public class TransformModule {
  @SerializedName("title")
  private String title = null;

  @SerializedName("content")
  private String content = null;

  /**
   * 转化组件类型标识 * &#x60;1&#x60; - 官网链接 * &#x60;3&#x60; - 联系电话
   */
  @JsonAdapter(ModuleTypeEnum.Adapter.class)
  public enum ModuleTypeEnum {
    NUMBER_1(1),
    NUMBER_3(3);

    private Integer value;

    ModuleTypeEnum(Integer value) {
      this.value = value;
    }
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ModuleTypeEnum fromValue(String text) {
      for (ModuleTypeEnum b : ModuleTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ModuleTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ModuleTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ModuleTypeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value = jsonReader.nextInt();
        return ModuleTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("module_type")
  private ModuleTypeEnum moduleType = null;

  @SerializedName("extra")
  private String extra = null;

  public TransformModule title(String title) {
    this.title = title;
    return this;
  }

   /**
   * 转化组件名
   * @return title
  **/
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public TransformModule content(String content) {
    this.content = content;
    return this;
  }

   /**
   * 转化组件数据
   * @return content
  **/
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public TransformModule moduleType(ModuleTypeEnum moduleType) {
    this.moduleType = moduleType;
    return this;
  }

   /**
   * 转化组件类型标识 * &#x60;1&#x60; - 官网链接 * &#x60;3&#x60; - 联系电话
   * @return moduleType
  **/
  public ModuleTypeEnum getModuleType() {
    return moduleType;
  }

  public void setModuleType(ModuleTypeEnum moduleType) {
    this.moduleType = moduleType;
  }

  public TransformModule extra(String extra) {
    this.extra = extra;
    return this;
  }

   /**
   * 转化组件补充信息
   * @return extra
  **/
  public String getExtra() {
    return extra;
  }

  public void setExtra(String extra) {
    this.extra = extra;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransformModule transformModule = (TransformModule) o;
    return Objects.equals(this.title, transformModule.title) &&
        Objects.equals(this.content, transformModule.content) &&
        Objects.equals(this.moduleType, transformModule.moduleType) &&
        Objects.equals(this.extra, transformModule.extra);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, content, moduleType, extra);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransformModule {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    moduleType: ").append(toIndentedString(moduleType)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
